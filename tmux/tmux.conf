# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal xterm-16color

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h
bind-key ^V split-window -h
bind-key s split-window
bind-key ^S split-window

bind H select-pane -L
bind J select-pane -D
bind K select-pane -U
bind L select-pane -R

bind-key j resize-pane -D
bind-key k resize-pane -U
bind-key h resize-pane -L
bind-key l resize-pane -R

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# color scheme (styled as vim-powerline)
set -g pane-border-fg brightblue #base0
set -g pane-border-bg black #base03
set -g pane-active-border-fg blue
set -g pane-active-border-bg black

set -g message-fg brightgreen
set -g message-bg black

set -g status-left-length 52
set -g status-right-length 451
set-option -g status-interval 2

set -g status-fg white
set -g status-bg black
set -g window-status-format "#[fg=black,bg=brightgreen]⮀#[fg=white,bg=brightgreen] #I: #W #[fg=brightgreen,bg=black]⮀"
set -g window-status-current-format "#[fg=black,bg=blue]⮀#[fg=white,bg=blue] #I: #W #[fg=blue,bg=black]⮀"

set-option -g status-left "#(~/.yadr/tmux/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.yadr/tmux/tmux-powerline/powerline.sh right)"
bind C-[ run '~/.yadr/tmux/tmux-powerline/mute_powerline.sh left'	# Mute left
bind C-] run '~/.yadr/tmux/tmux-powerline/mute_powerline.sh right'	# Mute right

# Backtick binding

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l zsh || zsh"

# Screen like binding
unbind C-b
set -g prefix `
bind-key ` send-prefix

# Reload config
bind-key r source-file ~/.tmux.conf

# No escape time for vi mode
set -sg escape-time 0

# Set window notifications
setw -g monitor-activity on
setw -g visual-activity on
set-option -g visual-bell on
set-option -g bell-action any

# Set color of visual bell - NOT WORKING AS HOPED...
setw -g window-status-bell-attr blink
setw -g window-status-bell-bg blue
setw -g window-status-bell-fg black

# Allow changing to current pane w/ mouse
setw -g mode-mouse on
setw -g mouse-select-window on
setw -g mouse-select-pane on
setw -g mouse-resize-pane on

# Setup copy and paste
bind p paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bigger history
set -g history-limit 100000

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'
